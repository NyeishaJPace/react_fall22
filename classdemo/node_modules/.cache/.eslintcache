[{"/workspace/react_fall22/classdemo/src/index.js":"1","/workspace/react_fall22/classdemo/src/App.js":"2","/workspace/react_fall22/classdemo/src/components/Header.jsx":"3","/workspace/react_fall22/classdemo/src/components/MainBody.jsx":"4","/workspace/react_fall22/classdemo/src/components/LightTheme.js":"5","/workspace/react_fall22/classdemo/src/components/DarkTheme.js":"6"},{"size":1027,"mtime":1667700760775,"results":"7","hashOfConfig":"8"},{"size":1475,"mtime":1667704613787,"results":"9","hashOfConfig":"8"},{"size":1390,"mtime":1667246326000,"results":"10","hashOfConfig":"8"},{"size":413,"mtime":1666727044000,"results":"11","hashOfConfig":"8"},{"size":103,"mtime":1666831409000,"results":"12","hashOfConfig":"8"},{"size":102,"mtime":1666831431000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xnrror",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/workspace/react_fall22/classdemo/src/index.js",[],[],"/workspace/react_fall22/classdemo/src/App.js",[],[],"/workspace/react_fall22/classdemo/src/components/Header.jsx",["34"],[],"import React, { Component } from \"react\";\nimport MainBody from \"./MainBody\";\n\nclass Header extends Component{\n    //constructor for state\n    constructor(props){\n        super(props)\n        this.state = { \n            count: 0, \n            theme: window.matchMedia('(prefers-color-scheme: dark)').matches ? \"dark\" : \"light\"\n        }\n\n    }\n\n    // exp ? true : false; if(exp){true} else {false} -> ternary\n\n    // exp ? true : exp1 ? true : false;   if(exp){true} else { if(exp1){true} else {false}\n\n    // lifecycle methods\n\n    render(){\n        const { linkText, linkUrl } = this.props\n        // this.props.linkText\n        return(\n            <header className={`App-header ${this.state.theme}`}>\n                <p className={\"testing-this\" + this.state.theme}>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <a className=\"App-link\" href={linkUrl} target=\"_blank\" rel=\"noopener noreferrer\" >\n                    {linkText}\n                </a>\n                <span>\n                    You have clicked on the button {this.state.count} times!\n                </span>\n                <button role=\"button\" onClick={() => this.setState({ count : this.state.count +1})}>\n                    Increment Count\n                </button>\n                <MainBody />\n            </header>\n        )\n    }\n}\n\nexport default Header",[],"/workspace/react_fall22/classdemo/src/components/MainBody.jsx",[],[],"/workspace/react_fall22/classdemo/src/components/LightTheme.js",[],[],"/workspace/react_fall22/classdemo/src/components/DarkTheme.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":35,"column":17,"nodeType":"37","endLine":35,"endColumn":101},"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement"]